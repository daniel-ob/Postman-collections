{
	"info": {
		"_postman_id": "84ba47b8-bba1-426e-8896-095f21454b9e",
		"name": "GitHub",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create repository",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const randomString = Math.random().toString(16).substr(2, 8);",
							"repoName = \"Test repository \" + randomString;",
							"",
							"console.log(repoName);",
							"",
							"pm.environment.set(\"repoName\", repoName);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Expected Response: Status: 201 Created",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.environment.set(\"owner\",response.owner.login)",
							"pm.environment.set(\"repoName\",response.name)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{repoName}}\",\n    \"description\": \"This is a test repository created by Postman\",\n    \"private\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/user/repos?name={{repoName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"repos"
					],
					"query": [
						{
							"key": "name",
							"value": "{{repoName}}"
						}
					]
				},
				"description": "Create a repository for the authenticated user:\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#create-a-repository-for-the-authenticated-user\n\nAPI url: https://api.github.com"
			},
			"response": []
		},
		{
			"name": "Check repository is created",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Expected Response: Status: 200 OK",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/{{owner}}/{{repoName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repoName}}"
					]
				},
				"description": "Get a repository:\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-a-repository"
			},
			"response": []
		},
		{
			"name": "Create an issue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"var response = pm.response.json();",
							"pm.environment.set(\"issueNumber\", response.number)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const issueTitle = \"Found a bug\";",
							"pm.environment.set(\"issueTitle\", issueTitle);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"{{issueTitle}}\",\n    \"body\": \"This issue has been automatically created by Postman.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/{{owner}}/{{repoName}}/issues",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repoName}}",
						"issues"
					]
				},
				"description": "Create an issue:\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/issues#create-an-issue"
			},
			"response": []
		},
		{
			"name": "Check issue is created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Issue is created\", function () {",
							"    var response = pm.response.json();",
							"    var issueTitle = pm.variables.get(\"issueTitle\");",
							"    pm.expect(response.title).to.eql(issueTitle);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/repos/{{owner}}/{{repoName}}/issues/{{issueNumber}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repoName}}",
						"issues",
						"{{issueNumber}}"
					]
				},
				"description": "Get an issue: \nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/issues#get-an-issue"
			},
			"response": []
		},
		{
			"name": "Delete Repository",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Expected response: 204 No Content",
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/repos/{{owner}}/{{repoName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repoName}}"
					]
				},
				"description": "Delete a repository:\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#delete-a-repository"
			},
			"response": []
		},
		{
			"name": "Check repository is removed",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// expected 404 Not found",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"// Clean-up",
							"pm.environment.unset(\"repoName\");",
							"pm.environment.unset(\"owner\");",
							"pm.environment.unset(\"issueTitle\");",
							"pm.environment.unset(\"issueNumber\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/repos/{{owner}}/{{repoName}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"repos",
						"{{owner}}",
						"{{repoName}}"
					]
				},
				"description": "Get a repository:\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#get-a-repository"
			},
			"response": []
		}
	]
}
